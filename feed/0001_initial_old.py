# Generated by Django 3.0.8 on 2020-09-01 03:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(validators=[django.core.validators.MaxLengthValidator(160)])),
                ('is_read', models.BooleanField(blank=True, default=False)),
                ('read_time', models.PositiveSmallIntegerField(default=0, verbose_name='Read Time')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views', models.IntegerField(default=0)),
                ('approved', models.BooleanField(default=True)),
                ('is_public', models.BooleanField(default=False)),
                ('commented_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commented', to='accounts.UserProfile')),
            ],
        ),
        migrations.CreateModel(
            name='Temp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temp', models.CharField(max_length=200)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='TopicAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, default='images/topicholder.png', null=True, upload_to='topimages/')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.BooleanField(blank=True)),
                ('read_time', models.PositiveSmallIntegerField(default=0, verbose_name='View Time')),
                ('hot_topics', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feed.TopicAction')),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_set1', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='topic_set2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-hot_topics'],
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=160)),
                ('views', models.IntegerField(default=0)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('is_public', models.BooleanField(default=False)),
                ('likes', models.ManyToManyField(blank=True, related_name='r_likes', to='accounts.UserProfile')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='feed.Comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to=settings.AUTH_USER_MODEL)),
                ('view_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read', to='accounts.UserProfile')),
            ],
            options={
                'ordering': ['-date_added'],
            },
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=160)),
                ('image', models.ImageField(blank=True, default='photos/feedholder.png', null=True, upload_to='photos/%Y/%m/%d/')),
                ('status', models.IntegerField(choices=[(1, 'new'), (2, 'verified'), (3, 'published')], default=1)),
                ('is_read', models.BooleanField(default=False)),
                ('read_time', models.PositiveSmallIntegerField(default=0, verbose_name='View Time')),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('views', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserProfile')),
                ('likes', models.ManyToManyField(blank=True, related_name='feed_liked', to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feed.Topic')),
                ('view_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feeds_viewed', to='accounts.UserProfile')),
            ],
            options={
                'verbose_name_plural': 'feeds',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='feed',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='feed.Feed'),
        ),
        migrations.AddField(
            model_name='comment',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='likes', to='accounts.UserProfile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='view_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='viewed', to='accounts.UserProfile', verbose_name='View'),
        ),
        migrations.CreateModel(
            name='LikeDislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField(choices=[(1, 'Like'), (-1, 'Dislike')], default=1, verbose_name='likes')),
                ('date', models.DateTimeField(auto_now=True)),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes_comment', to='feed.Comment')),
                ('feed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='likes_feed', to='feed.Feed')),
                ('liked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked', to='accounts.UserProfile')),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('feed', 'comment', 'liked_by')},
            },
        ),
    ]
